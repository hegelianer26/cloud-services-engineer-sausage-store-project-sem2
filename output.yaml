apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    meta.helm.sh/release-name: sem-project
    meta.helm.sh/release-namespace: r-devops-magistracy-project-2sem-816697651
  creationTimestamp: "2025-09-14T08:01:27Z"
  generation: 3
  labels:
    app.kubernetes.io/component: backend
    app.kubernetes.io/instance: sem-project
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: backend
    app.kubernetes.io/part-of: sem-project
    app.kubernetes.io/version: latest
    helm.sh/chart: backend-0.1.0
  name: sem-project-backend
  namespace: r-devops-magistracy-project-2sem-816697651
  resourceVersion: "81025791"
  uid: 36508458-047a-4a76-b8cb-d328fde2daf7
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 15
  selector:
    matchLabels:
      app: sem-project-backend
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: "2025-09-14T15:06:14+07:00"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: sem-project-backend
    spec:
      containers:
      - env:
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            configMapKeyRef:
              key: postgres_uri
              name: sem-project-backend-conf
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            configMapKeyRef:
              key: postgres_user
              name: sem-project-backend-conf
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: postgres_password
              name: sem-project-backend-conf
        - name: REPORT_PATH
          valueFrom:
            configMapKeyRef:
              key: report_path
              name: sem-project-backend-conf
        - name: LOG_PATH
          valueFrom:
            configMapKeyRef:
              key: log_path
              name: sem-project-backend-conf
        image: hegelianer/sausage-backend:fixed
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: backend
        ports:
        - containerPort: 8080
          name: backend
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: 768Mi
          requests:
            cpu: 100m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: postgres_uri
            path: postgres_uri
          - key: postgres_user
            path: postgres_user
          - key: postgres_password
            path: postgres_password
          - key: report_path
            path: report_path
          - key: log_path
            path: log_path
          name: sem-project-backend-conf
        name: sem-project-backend-conf
status:
  conditions:
  - lastTransitionTime: "2025-09-14T08:01:27Z"
    lastUpdateTime: "2025-09-14T08:01:27Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2025-09-14T08:01:27Z"
    lastUpdateTime: "2025-09-14T08:36:19Z"
    message: ReplicaSet "sem-project-backend-6b945f8c74" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
